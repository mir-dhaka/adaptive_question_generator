"""init db

Revision ID: b3e3ced354d8
Revises: 
Create Date: 2025-08-15 10:49:17.801107

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b3e3ced354d8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('exam_info', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulated_exam_data_raw',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('dag_title', sa.String(), nullable=False),
    sa.Column('kc_title', sa.String(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('selected_option', sa.String(), nullable=False),
    sa.Column('time_taken', sa.Float(), nullable=True),
    sa.Column('help_taken', sa.Integer(), nullable=True),
    sa.Column('screen_movement_weight', sa.Float(), nullable=True),
    sa.Column('facial_expression_weight', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulated_student_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_processed', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('first_name'),
    sa.UniqueConstraint('last_name'),
    sa.UniqueConstraint('user_name')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('dag_edges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dag_id', sa.Integer(), nullable=False),
    sa.Column('from_kc_id', sa.Integer(), nullable=False),
    sa.Column('to_kc_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dag_id'], ['dags.id'], ),
    sa.ForeignKeyConstraint(['from_kc_id'], ['kcs.id'], ),
    sa.ForeignKeyConstraint(['to_kc_id'], ['kcs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kc_topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kc_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['kc_id'], ['kcs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('dag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dag_id'], ['dags.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kc_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('correct_option', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['kc_id'], ['kcs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('masteries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('dag_id', sa.Integer(), nullable=False),
    sa.Column('kc_id', sa.Integer(), nullable=False),
    sa.Column('mastery', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['dag_id'], ['dags.id'], ),
    sa.ForeignKeyConstraint(['kc_id'], ['kcs.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('next_suggested_question_id', sa.Integer(), nullable=True),
    sa.Column('kc_id', sa.Integer(), nullable=True),
    sa.Column('previous_mastery', sa.Float(), nullable=True),
    sa.Column('current_mastery', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['kc_id'], ['kcs.id'], ),
    sa.ForeignKeyConstraint(['next_suggested_question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['option_id'], ['options.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulated_exam_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('master_id', sa.Integer(), nullable=False),
    sa.Column('dag_id', sa.Integer(), nullable=False),
    sa.Column('kc_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('time_taken', sa.Float(), nullable=True),
    sa.Column('help_taken', sa.Integer(), nullable=True),
    sa.Column('screen_movement_weight', sa.Float(), nullable=True),
    sa.Column('facial_expression_weight', sa.Float(), nullable=True),
    sa.Column('calculated_mastery', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['dag_id'], ['dags.id'], ),
    sa.ForeignKeyConstraint(['kc_id'], ['kcs.id'], ),
    sa.ForeignKeyConstraint(['master_id'], ['simulated_student_data.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['options.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('simulated_exam_data')
    op.drop_table('exam_details')
    op.drop_table('options')
    op.drop_table('masteries')
    op.drop_table('questions')
    op.drop_table('profiles')
    op.drop_table('kc_topics')
    op.drop_table('dag_edges')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('simulated_student_data')
    op.drop_table('simulated_exam_data_raw')
    op.drop_table('settings')
    op.drop_table('kcs')
    op.drop_table('exams')
    op.drop_table('dags')
    # ### end Alembic commands ###
